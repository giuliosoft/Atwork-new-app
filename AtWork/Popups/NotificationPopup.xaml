<?xml version="1.0" encoding="UTF-8"?>
<pages:PopupPage xmlns="http://xamarin.com/schemas/2014/forms"
            xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            x:Class="AtWork.Popups.NotificationPopup"
            xmlns:Converters="clr-namespace:AtWork.Converters;assembly=AtWork"
            xmlns:FlowListControl="clr-namespace:DLToolkit.Forms.Controls;assembly=DLToolkit.Forms.Controls.FlowListView"
            xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
            xmlns:Services="clr-namespace:AtWork.Services;assembly=AtWork"
            xmlns:Multilingual="clr-namespace:AtWork.Multilingual"
            xmlns:PancakeControl="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
            xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
            BackgroundColor="Transparent">
     <pages:PopupPage.HasSystemPadding>
        <OnPlatform x:TypeArguments="x:Boolean">
            <OnPlatform.iOS>false</OnPlatform.iOS>
            <OnPlatform.Android>true</OnPlatform.Android>
        </OnPlatform>
    </pages:PopupPage.HasSystemPadding>
    <pages:PopupPage.Animation>
        <animations:ScaleAnimation PositionIn="Bottom" PositionOut="Bottom" ScaleIn="1.2" ScaleOut="0.8" DurationIn="400" DurationOut="300" EasingIn="SinOut" EasingOut="SinIn" HasBackgroundAnimation="True" />
    </pages:PopupPage.Animation>
    <pages:PopupPage.Resources>
        <ResourceDictionary>
            <Converters:InverseBooleanConverter x:Key="InverseConverter" />
        </ResourceDictionary>
    </pages:PopupPage.Resources>
    <PancakeControl:PancakeView BackgroundColor="{DynamicResource DarkColor}" HorizontalOptions="FillAndExpand" VerticalOptions="End" Padding="0" CornerRadius="12,12,0,0">
        <StackLayout HorizontalOptions="FillAndExpand" VerticalOptions="End">
            <Label Text="{x:Static Multilingual:AppResources.txtPauseNotifications}" Style="{StaticResource JoinActivityPopupHeaderStyle}" Margin="{DynamicResource MarginPadding00_15_00_00}"/>
            <StackLayout HorizontalOptions="FillAndExpand" VerticalOptions="End" Padding="{DynamicResource MarginPadding40_00_40_00}">
                <Label Text="{x:Static Multilingual:AppResources.txtPauseNotificationsDescription}" Style="{StaticResource JoinActivityPopupTextStyle}" Margin="{DynamicResource MarginPadding00_10_00_10}"/>
            </StackLayout>
            <BoxView HeightRequest="1" BackgroundColor="{StaticResource WhiteColor}" Margin="{DynamicResource MarginPadding00_15_00_15}"/>
            <Label Text="{x:Static Multilingual:AppResources.txtPauseFor}" Style="{StaticResource JoinActivityPopupTextStyle}" FontSize="{DynamicResource FontSize20}" Padding="{DynamicResource MarginPadding25_00_25_10}"/>
            <CollectionView x:Name="clLanguageList" ItemsSource="{Binding LanguageList}" VerticalOptions="End" HeightRequest="{DynamicResource HeightWidth350}">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <StackLayout>
                            <Label Text="{Binding Name}" Style="{StaticResource JoinActivityPopupTextStyle}" HorizontalOptions="FillAndExpand" FontSize="{DynamicResource FontSize18}" Padding="{DynamicResource MarginPadding20}" Margin="{DynamicResource MarginPadding20_00_20_00}">
                                <!--<Label.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected}" TargetType="Label" Value="True">
                                        <Setter Property="FontAttributes" Value="Bold" />
                                        <Setter Property="BackgroundColor" Value="{DynamicResource AccentColor}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsSelected}" TargetType="Label" Value="False">
                                        <Setter Property="FontAttributes" Value="None" />
                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                    </DataTrigger>
                                </Label.Triggers>-->
                            </Label>
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Source={x:Reference clLanguageList}, Path=BindingContext.SelectionChangedCommand}" CommandParameter="{Binding .}"/>
                            </StackLayout.GestureRecognizers>
                        </StackLayout>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
            <!--<Grid ColumnDefinitions="*,*" RowDefinitions="Auto" RowSpacing="5" ColumnSpacing="20" HorizontalOptions="FillAndExpand" Margin="20,0,20,50" >
                <Button Command="{Binding CancelCommand}" Grid.Column="0" Text="Cancel" HorizontalOptions="FillAndExpand" BackgroundColor="{StaticResource OffWhiteColor}" HeightRequest="40" CornerRadius="20" TextColor="{DynamicResource DarkColor}" FontAttributes="Bold"/>
                <Button Command="{Binding SaveCommand}" Grid.Column="1" Text="Submit" HorizontalOptions="FillAndExpand" BackgroundColor="{StaticResource OffWhiteColor}" HeightRequest="40" CornerRadius="20" TextColor="{DynamicResource DarkColor}" FontAttributes="Bold"/>
            </Grid>-->

            <!--<Label Text="{x:Static Multilingual:AppResources.txtPauseFor30Min}" Style="{StaticResource JoinActivityPopupTextStyle}" FontSize="20" Padding="25,0,25,10">
                <Label.Triggers>
                    <DataTrigger Binding="{Binding IsSelected}" TargetType="Label" Value="True">
                        <Setter Property="Text" Value="change" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsSelected}" TargetType="Label" Value="False">
                        <Setter Property="Text" Value="Change false" />
                    </DataTrigger>
                </Label.Triggers>
            </Label>
            <Label Text="{x:Static Multilingual:AppResources.txtPauseFor1Hour}" Style="{StaticResource JoinActivityPopupTextStyle}" FontSize="20" Padding="25,0,25,10"/>
            <Label Text="{x:Static Multilingual:AppResources.txtPauseFor1day}" Style="{StaticResource JoinActivityPopupTextStyle}" FontSize="20" Padding="25,0,25,10"/>
            <Label Text="{x:Static Multilingual:AppResources.txtPauseFor1week}" Style="{StaticResource JoinActivityPopupTextStyle}" FontSize="20" Padding="25,0,25,10"/>
            <Label Text="{x:Static Multilingual:AppResources.txtPauseForForever}" Style="{StaticResource JoinActivityPopupTextStyle}" FontSize="20" Padding="25,0,25,10"/>-->


            <!--<Grid ColumnDefinitions="300" HorizontalOptions="Center" VerticalOptions="Center">
                <FlexLayout Grid.Column="0" x:Name="datesView" BindableLayout.ItemsSource="{Binding ActivityJoinDates}" AlignContent="Center" Direction="Row" Wrap="Wrap" JustifyContent="Center" HorizontalOptions="FillAndExpand" VerticalOptions="Center" Padding="0">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate>
                            <PancakeControl:PancakeView BorderColor="White" BorderThickness="2" Margin="5" HasShadow="False" CornerRadius="15" HeightRequest="30" WidthRequest="110" HorizontalOptions="Center" VerticalOptions="Center">
                                <PancakeControl:PancakeView.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected}" TargetType="PancakeControl:PancakeView" Value="True">
                                        <Setter Property="BackgroundColor" Value="White" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsSelected}" TargetType="PancakeControl:PancakeView" Value="False">
                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                    </DataTrigger>
                                </PancakeControl:PancakeView.Triggers>
                                <Label Text="{Binding DisplayDateString}" Style="{StaticResource JoinActivityDateLabelStyle}">
                                    <Label.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected}" TargetType="Label" Value="True">
                                            <Setter Property="TextColor" Value="{StaticResource DarkBrownColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSelected}" TargetType="Label" Value="False">
                                            <Setter Property="TextColor" Value="White" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                                <PancakeControl:PancakeView.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding Source={x:Reference datesView}, Path=BindingContext.DateSelectedCommand}" CommandParameter="{Binding .}" />
                                </PancakeControl:PancakeView.GestureRecognizers>
                            </PancakeControl:PancakeView>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </FlexLayout>
            </Grid>-->
            <!--<PancakeControl:PancakeView BackgroundColor="{StaticResource OffWhiteColor}" HeightRequest="30" CornerRadius="25" HorizontalOptions="FillAndExpand" VerticalOptions="Fill" Margin="20,40,20,25" Padding="10">
                <Label Text="{x:Static Multilingual:AppResources.JoinActivityText}" Style="{StaticResource JoinActivityPopupHeaderStyle}" TextColor="{StaticResource BlackColor}"/>
                <PancakeControl:PancakeView.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding JoinActivityCommand}"/>
                </PancakeControl:PancakeView.GestureRecognizers>
            </PancakeControl:PancakeView>-->
        </StackLayout>
        <PancakeControl:PancakeView.GestureRecognizers>
            <TapGestureRecognizer Command="{Binding GoForClosePopupCommand}"/>
        </PancakeControl:PancakeView.GestureRecognizers>
    </PancakeControl:PancakeView>
</pages:PopupPage>
